import React from 'react';
import { Paper, Typography, Box, Avatar, Chip } from '@mui/material';
import { format } from 'date-fns';
import { ru } from 'date-fns/locale';
import FishingIcon from '@mui/icons-material/Phishing';
import PlaceIcon from '@mui/icons-material/Place';
import DateRangeIcon from '@mui/icons-material/DateRange';
import { NewsItem, NewsContent, NewsCategory, NEWS_CATEGORIES } from '../shared/types/news.types';
import CachedImage from './CachedImage';
import { formatLocalDate } from '../utils/dateUtils';

interface NewsCardProps {
  news: NewsItem;
  onClick: () => void;
}

const NewsCard: React.FC<NewsCardProps> = ({ news, onClick }) => {
  // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –ø–µ—Ä–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å —Ç–∏–ø–æ–º "image"
  const getImagePreview = (): string | undefined => {
    const imageContent = news.contents.find(content => content.type === 'image');
    return imageContent?.content;
  };

  // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø—Ä–µ–≤—å—é
  const getTextPreview = (): string => {
    // –î–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–°–æ–±—ã—Ç–∏—è" –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç (order === 0)
    if (news.category === NewsCategory.EVENTS) {
      const mainContent = news.contents.find(content => content.order === 0);
      if (mainContent && mainContent.content) {
        const plainText = mainContent.content.replace(/<[^>]+>/g, '');
        return plainText.length > 150 
          ? plainText.slice(0, 150) + '...' 
          : plainText;
      }
    } else {
      // –î–ª—è –¥—Ä—É–≥–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏—â–µ–º –ª—é–±–æ–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
      const textContent = news.contents.find(content => content.type === 'text');
      if (textContent) {
        const plainText = textContent.content.replace(/<[^>]+>/g, '');
        return plainText.length > 150 
          ? plainText.slice(0, 150) + '...' 
          : plainText;
      }
    }
    return '–ù–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ';
  };
  
  // –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–µ, –º–µ—Å—Ç–µ –∏ –¥–∞—Ç–µ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–°–æ–±—ã—Ç–∏—è"
  const extractEventData = (): { discipline?: string; place?: string; date?: string } => {
    if (news.category !== NewsCategory.EVENTS) {
      return {};
    }
    
    // –ò—â–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ contents –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    // –°–æ–≥–ª–∞—Å–Ω–æ API, contents[1] - –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞, contents[2] - –º–µ—Å—Ç–æ, contents[3] - –¥–∞—Ç–∞
    const disciplineContent = news.contents.find(content => content.order === 1);
    const placeContent = news.contents.find(content => content.order === 2);
    const dateContent = news.contents.find(content => content.order === 3);
    
    // –ò–∑–≤–ª–µ–∫–∞–µ–º —á–∏—Å—Ç—ã–π —Ç–µ–∫—Å—Ç, —É–¥–∞–ª—è—è emoji –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    const extractCleanText = (content?: string): string => {
      if (!content) return '';
      // –£–¥–∞–ª—è–µ–º emoji –∏ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏–∑ —Å—Ç—Ä–æ–∫–∏
      return content
        .replace(/üé£\s*–î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞:\s*/, '')
        .replace(/üåç\s*–ú–µ—Å—Ç–æ:\s*/, '')
        .replace(/üìÖ\s*–î–∞—Ç–∞:\s*/, '')
        .replace(/–î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞:\s*/, '')
        .replace(/–ú–µ—Å—Ç–æ:\s*/, '')
        .replace(/–î–∞—Ç–∞:\s*/, '')
        .trim();
    };
    
    return {
      discipline: extractCleanText(disciplineContent?.content),
      place: extractCleanText(placeContent?.content),
      date: extractCleanText(dateContent?.content)
    };
  };
  
  const imageUrl = getImagePreview();
  const eventData = extractEventData();
  const isEvent = news.category === NewsCategory.EVENTS;

  return (
    <Paper 
      sx={{ 
        p: 2,
        cursor: 'pointer',
        '&:hover': { 
          bgcolor: 'action.hover',
          transform: 'translateY(-2px)',
          transition: 'transform 0.2s ease-in-out'
        },
        display: 'flex',
        flexDirection: 'column',
        gap: 2,
        height: '100%',
        position: 'relative'
      }}
      onClick={onClick}
      elevation={1}
    >
      {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ */}
      {imageUrl && (
        <Box sx={{ 
          position: 'relative', 
          height: 200, 
          overflow: 'hidden',
          borderRadius: 1
        }}>
          <CachedImage
            src={imageUrl}
            alt={news.title}
            style={{
              width: '100%',
              height: '100%',
              objectFit: 'cover',
              borderRadius: '4px',
            }}
            showSkeleton={true}
            skeletonHeight={200}
            placeholderSrc="/images/placeholder-image.svg"
          />
        </Box>
      )}
      
      {/* –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <Box sx={{ flex: 1, display: 'flex', flexDirection: 'column' }}>
        {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–≥ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –≤—Å–µ—Ö, –∫—Ä–æ–º–µ "–í–∏–¥—ã —Ä—ã–±" */}
        {news.category !== NewsCategory.FISH_SPECIES && (
          <Chip 
            label={NEWS_CATEGORIES[news.category].title} 
            size="small" 
            sx={{ 
              alignSelf: 'flex-start', 
              mb: 1,
              backgroundColor: 'primary.light',
              color: 'primary.contrastText'
            }} 
          />
        )}
        
        <Typography variant="h6" sx={{ mb: 1, fontWeight: 600, lineHeight: 1.3 }}>
          {news.title}
        </Typography>
        
        <Typography variant="body2" color="text.secondary" sx={{ mb: isEvent ? 3 : 2, flex: 1 }}>
          {getTextPreview()}
        </Typography>
        
        {/* –ö–æ–º–ø–∞–∫—Ç–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–±—ã—Ç–∏–∏ - –≤–Ω–∏–∑—É –∫–∞—Ä—Ç–æ—á–∫–∏ */}
        {isEvent && (
          <Box sx={{ display: 'flex', mt: 'auto', flexWrap: 'wrap', gap: 1 }}>
            {eventData.place && (
              <Chip 
                icon={<PlaceIcon fontSize="small" />} 
                label={`–ú–µ—Å—Ç–æ: ${eventData.place}`}
                size="small"
                sx={{ fontSize: '0.75rem' }}
              />
            )}
            
            {eventData.date && (
              <Chip 
                icon={<DateRangeIcon fontSize="small" />} 
                label={`–î–∞—Ç–∞: ${eventData.date}`}
                size="small"
                sx={{ fontSize: '0.75rem' }}
              />
            )}
            
            {eventData.discipline && (
              <Chip 
                icon={<FishingIcon fontSize="small" />} 
                label={`–î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞: ${eventData.discipline}`}
                size="small"
                sx={{ fontSize: '0.75rem' }}
              />
            )}
          </Box>
        )}
      </Box>
    </Paper>
  );
};

export default NewsCard; 