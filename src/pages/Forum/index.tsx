import React, { useState } from 'react';
import { 
  Container, Box, Typography, Paper, Divider, Button, 
  Avatar, Grid, TextField, InputAdornment, Chip,
  Card, CardContent, CardHeader, CardActions
} from '@mui/material';
import { useNavigate } from 'react-router-dom';
import SearchIcon from '@mui/icons-material/Search';
import AddIcon from '@mui/icons-material/Add';
import ForumIcon from '@mui/icons-material/Forum';
import CommentIcon from '@mui/icons-material/Comment';
import VisibilityIcon from '@mui/icons-material/Visibility';
import AccessTimeIcon from '@mui/icons-material/AccessTime';
import BookmarkIcon from '@mui/icons-material/Bookmark';
import BookmarkBorderIcon from '@mui/icons-material/BookmarkBorder';

// –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ñ–æ—Ä—É–º–∞
export const forumCategories = [
  { 
    id: 1, 
    title: '–†—ã–±–æ–ª–æ–≤–Ω—ã–µ —Å–Ω–∞—Å—Ç–∏', 
    description: '–û–±—Å—É–∂–¥–µ–Ω–∏–µ —É–¥–æ—á–µ–∫, —Å–ø–∏–Ω–Ω–∏–Ω–≥–æ–≤, –∫–∞—Ç—É—à–µ–∫ –∏ –¥—Ä—É–≥–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è',
    topics: 124,
    posts: 1543,
    icon: 'üé£'
  },
  { 
    id: 2, 
    title: '–ú–µ—Å—Ç–∞ –¥–ª—è —Ä—ã–±–∞–ª–∫–∏', 
    description: '–î–µ–ª–∏–º—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ª—É—á—à–∏—Ö –º–µ—Å—Ç–∞—Ö –¥–ª—è —Ä—ã–±–∞–ª–∫–∏',
    topics: 89,
    posts: 967,
    icon: 'üó∫Ô∏è'
  },
  { 
    id: 3, 
    title: '–¢–µ—Ö–Ω–∏–∫–∞ –ª–æ–≤–ª–∏', 
    description: '–û–±—Å—É–∂–¥–µ–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–µ—Ö–Ω–∏–∫ –∏ –º–µ—Ç–æ–¥–æ–≤ –ª–æ–≤–ª–∏ —Ä—ã–±—ã',
    topics: 75,
    posts: 823,
    icon: 'üìä'
  },
  { 
    id: 4, 
    title: '–ù–∞–∂–∏–≤–∫–∏ –∏ –ø—Ä–∏–º–∞–Ω–∫–∏', 
    description: '–í—Å—ë –æ –Ω–∞–∂–∏–≤–∫–∞—Ö, –ø—Ä–∏–º–∞–Ω–∫–∞—Ö –∏ –ø—Ä–∏–∫–æ—Ä–º–∫–∞—Ö',
    topics: 103,
    posts: 1288,
    icon: 'ü™±'
  },
  { 
    id: 5, 
    title: '–û—Ç—á–µ—Ç—ã –æ —Ä—ã–±–∞–ª–∫–µ', 
    description: '–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ —É—Å–ø–µ—Ö–∞–º–∏ –∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è–º–∏',
    topics: 201,
    posts: 2654,
    icon: 'üìù'
  }
];

// –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç–µ–º
export const popularTopics = [
  {
    id: 1,
    title: '–õ—É—á—à–∏–µ —Å–ø–∏–Ω–Ω–∏–Ω–≥–∏ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö',
    author: {
      id: 1,
      name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä',
      avatar: 'https://i.pravatar.cc/150?img=1'
    },
    replies: 34,
    views: 678,
    lastActivity: '15 –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥',
    category: '–†—ã–±–æ–ª–æ–≤–Ω—ã–µ —Å–Ω–∞—Å—Ç–∏',
    isBookmarked: true,
  },
  {
    id: 2,
    title: '–†—ã–±–∞–ª–∫–∞ –Ω–∞ –í–æ–ª–≥–µ: –ª—É—á—à–∏–µ –º–µ—Å—Ç–∞ –∏ –≤—Ä–µ–º—è –≥–æ–¥–∞',
    author: {
      id: 2,
      name: '–ú–∏—Ö–∞–∏–ª',
      avatar: 'https://i.pravatar.cc/150?img=2'
    },
    replies: 28,
    views: 542,
    lastActivity: '2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥',
    category: '–ú–µ—Å—Ç–∞ –¥–ª—è —Ä—ã–±–∞–ª–∫–∏',
    isBookmarked: false,
  },
  {
    id: 3,
    title: '–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ç—É—à–∫—É –¥–ª—è —Å–ø–∏–Ω–Ω–∏–Ω–≥–∞?',
    author: {
      id: 3,
      name: '–ï–ª–µ–Ω–∞',
      avatar: 'https://i.pravatar.cc/150?img=3'
    },
    replies: 42,
    views: 891,
    lastActivity: '4 —á–∞—Å–∞ –Ω–∞–∑–∞–¥',
    category: '–†—ã–±–æ–ª–æ–≤–Ω—ã–µ —Å–Ω–∞—Å—Ç–∏',
    isBookmarked: false,
  },
  {
    id: 4,
    title: '–£–ª–æ–≤–∏—Å—Ç—ã–µ –ø—Ä–∏–º–∞–Ω–∫–∏ –¥–ª—è —â—É–∫–∏: –ª–∏—á–Ω—ã–π –æ–ø—ã—Ç',
    author: {
      id: 4,
      name: '–î–º–∏—Ç—Ä–∏–π',
      avatar: 'https://i.pravatar.cc/150?img=4'
    },
    replies: 39,
    views: 723,
    lastActivity: '1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥',
    category: '–ù–∞–∂–∏–≤–∫–∏ –∏ –ø—Ä–∏–º–∞–Ω–∫–∏',
    isBookmarked: true,
  },
  {
    id: 5,
    title: '–¢–µ—Ö–Ω–∏–∫–∞ –ª–æ–≤–ª–∏ –∫–∞—Ä–ø–∞ –Ω–∞ –±–æ–π–ª—ã',
    author: {
      id: 5,
      name: '–°–µ—Ä–≥–µ–π',
      avatar: 'https://i.pravatar.cc/150?img=5'
    },
    replies: 31,
    views: 644,
    lastActivity: '2 –¥–Ω—è –Ω–∞–∑–∞–¥',
    category: '–¢–µ—Ö–Ω–∏–∫–∞ –ª–æ–≤–ª–∏',
    isBookmarked: false,
  }
];

const ForumPage: React.FC = () => {
  const navigate = useNavigate();
  const [searchQuery, setSearchQuery] = useState('');
  const [bookmarkedTopics, setBookmarkedTopics] = useState<number[]>(
    popularTopics.filter(topic => topic.isBookmarked).map(topic => topic.id)
  );

  const handleSearch = (e: React.FormEvent) => {
    e.preventDefault();
    console.log('–ü–æ–∏—Å–∫:', searchQuery);
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –≤—ã–∑–æ–≤ API –¥–ª—è –ø–æ–∏—Å–∫–∞
  };

  const handleCategoryClick = (categoryId: number) => {
    console.log('–ü–µ—Ä–µ—Ö–æ–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', categoryId);
    navigate(`/forum/category/${categoryId}`);
  };

  const handleTopicClick = (topicId: number) => {
    console.log('–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ç–µ–º–µ:', topicId);
    navigate(`/forum/topic/${topicId}`);
  };

  const handleCreateTopic = () => {
    console.log('–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ç–µ–º—ã');
    navigate('/forum/create-topic');
  };

  const toggleBookmark = (topicId: number) => {
    if (bookmarkedTopics.includes(topicId)) {
      setBookmarkedTopics(bookmarkedTopics.filter(id => id !== topicId));
    } else {
      setBookmarkedTopics([...bookmarkedTopics, topicId]);
    }
  };

  return (
    <Container maxWidth="lg" sx={{ py: 4 }}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –ø–æ–∏—Å–∫ */}
      <Box sx={{ mb: 4 }}>
        <Grid container spacing={2} alignItems="center">
          <Grid size={{ xs: 12, md: 6 }}>
            <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>
              <ForumIcon sx={{ fontSize: 36, color: 'primary.main' }} />
              <Typography variant="h4" component="h1" sx={{ fontWeight: 700 }}>
                –§–æ—Ä—É–º —Ä—ã–±–æ–ª–æ–≤–æ–≤
              </Typography>
            </Box>
            <Typography variant="subtitle1" color="text.secondary" sx={{ mt: 1 }}>
              –û–±—â–∞–π—Ç–µ—Å—å, –¥–µ–ª–∏—Ç–µ—Å—å –æ–ø—ã—Ç–æ–º –∏ –Ω–∞—Ö–æ–¥–∏—Ç–µ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤
            </Typography>
          </Grid>
          <Grid size={{ xs: 12, md: 6 }}>
            <Box component="form" onSubmit={handleSearch} sx={{ display: 'flex', alignItems: 'center' }}>
              <TextField
                fullWidth
                variant="outlined"
                placeholder="–ü–æ–∏—Å–∫ –ø–æ —Ñ–æ—Ä—É–º—É..."
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                InputProps={{
                  startAdornment: (
                    <InputAdornment position="start">
                      <SearchIcon color="action" />
                    </InputAdornment>
                  ),
                }}
                sx={{ 
                  bgcolor: 'background.paper',
                  borderRadius: 2,
                  '& .MuiOutlinedInput-root': {
                    borderRadius: 2,
                  }
                }}
              />
              <Button 
                variant="contained" 
                color="primary"
                onClick={handleCreateTopic}
                sx={{ 
                  ml: 2, 
                  height: 56, 
                  minWidth: { xs: 56, md: 180 },
                  borderRadius: 2
                }}
              >
                <AddIcon sx={{ display: { xs: 'block', md: 'inline' }, mr: { xs: 0, md: 1 } }} />
                <Typography sx={{ display: { xs: 'none', md: 'block' } }}>
                  –°–æ–∑–¥–∞—Ç—å —Ç–µ–º—É
                </Typography>
              </Button>
            </Box>
          </Grid>
        </Grid>
      </Box>

      {/* –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ñ–æ—Ä—É–º–∞ */}
      <Paper elevation={0} 
        sx={{ 
          mb: 4, 
          overflow: 'hidden',
          border: '1px solid',
          borderColor: 'divider',
          borderRadius: 3
        }}
      >
        <Typography 
          variant="h6" 
          sx={{ 
            p: 2, 
            bgcolor: 'primary.main', 
            color: 'white',
            fontWeight: 600
          }}
        >
          –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ñ–æ—Ä—É–º–∞
        </Typography>
        
        {forumCategories.map((category, index) => (
          <React.Fragment key={category.id}>
            {index > 0 && <Divider />}
            <Box 
              sx={{ 
                p: 2, 
                '&:hover': { 
                  bgcolor: 'action.hover',
                  cursor: 'pointer'
                },
                transition: 'background-color 0.2s'
              }}
              onClick={() => handleCategoryClick(category.id)}
            >
              <Grid container spacing={2} alignItems="center">
                <Grid size={{ xs: 12, md: 8 }}>
                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>
                    <Box 
                      sx={{ 
                        width: 50, 
                        height: 50, 
                        display: 'flex', 
                        alignItems: 'center', 
                        justifyContent: 'center',
                        bgcolor: 'primary.light',
                        color: 'white',
                        borderRadius: 2,
                        fontSize: '1.5rem'
                      }}
                    >
                      {category.icon}
                    </Box>
                    <Box>
                      <Typography variant="h6" color="primary.dark">{category.title}</Typography>
                      <Typography variant="body2" color="text.secondary">
                        {category.description}
                      </Typography>
                    </Box>
                  </Box>
                </Grid>
                <Grid size={{ xs: 12, md: 4 }}>
                  <Box sx={{ display: 'flex', justifyContent: { xs: 'flex-start', md: 'flex-end' }, gap: 3 }}>
                    <Box sx={{ textAlign: 'center' }}>
                      <Typography variant="h6" color="primary.main">
                        {category.topics}
                      </Typography>
                      <Typography variant="body2" color="text.secondary">
                        —Ç–µ–º
                      </Typography>
                    </Box>
                    <Box sx={{ textAlign: 'center' }}>
                      <Typography variant="h6" color="secondary.main">
                        {category.posts}
                      </Typography>
                      <Typography variant="body2" color="text.secondary">
                        —Å–æ–æ–±—â–µ–Ω–∏–π
                      </Typography>
                    </Box>
                  </Box>
                </Grid>
              </Grid>
            </Box>
          </React.Fragment>
        ))}
      </Paper>

      {/* –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ç–µ–º—ã */}
      <Paper elevation={0} 
        sx={{ 
          mb: 4, 
          overflow: 'hidden',
          border: '1px solid',
          borderColor: 'divider',
          borderRadius: 3
        }}
      >
        <Typography 
          variant="h6" 
          sx={{ 
            p: 2, 
            bgcolor: 'secondary.main', 
            color: 'white',
            fontWeight: 600
          }}
        >
          –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è
        </Typography>
        
        {popularTopics.map((topic, index) => (
          <React.Fragment key={topic.id}>
            {index > 0 && <Divider />}
            <Box 
              sx={{ 
                p: 2, 
                '&:hover': { 
                  bgcolor: 'action.hover',
                  cursor: 'pointer'
                },
                transition: 'background-color 0.2s'
              }}
            >
              <Grid container spacing={2}>
                <Grid size={{ xs: 10, md: 9 }}>
                  <Box sx={{ display: 'flex', alignItems: 'flex-start', gap: 2 }}>
                    <Avatar src={topic.author.avatar} alt={topic.author.name} />
                    <Box>
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, flexWrap: 'wrap' }}>
                        <Typography 
                          variant="subtitle1" 
                          sx={{ fontWeight: 600, color: 'secondary.dark' }}
                          onClick={() => handleTopicClick(topic.id)}
                        >
                          {topic.title}
                        </Typography>
                        <Chip 
                          size="small" 
                          label={topic.category} 
                          sx={{ 
                            bgcolor: 'primary.light', 
                            color: 'white',
                            height: 24,
                            fontSize: '0.75rem'
                          }} 
                        />
                      </Box>
                      <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mt: 1 }}>
                        <Typography variant="body2" color="text.secondary">
                          –ê–≤—Ç–æ—Ä: {topic.author.name}
                        </Typography>
                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>
                          <CommentIcon fontSize="small" color="action" />
                          <Typography variant="body2" color="text.secondary">
                            {topic.replies}
                          </Typography>
                        </Box>
                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>
                          <VisibilityIcon fontSize="small" color="action" />
                          <Typography variant="body2" color="text.secondary">
                            {topic.views}
                          </Typography>
                        </Box>
                      </Box>
                    </Box>
                  </Box>
                </Grid>
                <Grid size={{ xs: 2, md: 3 }}>
                  <Box sx={{ 
                    display: 'flex', 
                    flexDirection: { xs: 'column', md: 'row' },
                    justifyContent: 'flex-end', 
                    alignItems: { xs: 'flex-end', md: 'center' },
                    height: '100%',
                    gap: 2
                  }}>
                    <Box sx={{ 
                      display: 'flex', 
                      alignItems: 'center', 
                      gap: 0.5 
                    }}>
                      <AccessTimeIcon fontSize="small" color="action" />
                      <Typography variant="body2" color="text.secondary">
                        {topic.lastActivity}
                      </Typography>
                    </Box>
                    <Box 
                      onClick={(e) => {
                        e.stopPropagation();
                        toggleBookmark(topic.id);
                      }}
                      sx={{ 
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        cursor: 'pointer'
                      }}
                    >
                      {bookmarkedTopics.includes(topic.id) ? (
                        <BookmarkIcon color="primary" />
                      ) : (
                        <BookmarkBorderIcon />
                      )}
                    </Box>
                  </Box>
                </Grid>
              </Grid>
            </Box>
          </React.Fragment>
        ))}
      </Paper>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–æ—Ä—É–º–µ */}
      <Grid container spacing={3}>
        <Grid size={{ xs: 12, md: 4 }}>
          <Card sx={{ 
            height: '100%', 
            display: 'flex', 
            flexDirection: 'column',
            borderRadius: 3,
            boxShadow: 2
          }}>
            <CardContent>
              <Typography variant="h6" sx={{ fontWeight: 600, mb: 2 }}>
                –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ñ–æ—Ä—É–º–∞
              </Typography>
              <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>
                <Typography variant="body2" color="text.secondary">–í—Å–µ–≥–æ —Ç–µ–º:</Typography>
                <Typography variant="body2" fontWeight={600}>592</Typography>
              </Box>
              <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>
                <Typography variant="body2" color="text.secondary">–í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π:</Typography>
                <Typography variant="body2" fontWeight={600}>7,275</Typography>
              </Box>
              <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>
                <Typography variant="body2" color="text.secondary">–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤:</Typography>
                <Typography variant="body2" fontWeight={600}>1,423</Typography>
              </Box>
              <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>
                <Typography variant="body2" color="text.secondary">–ù–æ–≤—ã—Ö –∑–∞ –º–µ—Å—è—Ü:</Typography>
                <Typography variant="body2" fontWeight={600}>82</Typography>
              </Box>
            </CardContent>
          </Card>
        </Grid>
        <Grid size={{ xs: 12, md: 4 }}>
          <Card sx={{ 
            height: '100%', 
            display: 'flex', 
            flexDirection: 'column',
            borderRadius: 3,
            boxShadow: 2
          }}>
            <CardContent>
              <Typography variant="h6" sx={{ fontWeight: 600, mb: 2 }}>
                –ü—Ä–∞–≤–∏–ª–∞ —Ñ–æ—Ä—É–º–∞
              </Typography>
              <Typography variant="body2" paragraph>
                ‚Ä¢ –£–≤–∞–∂–∞–π—Ç–µ –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Ñ–æ—Ä—É–º–∞
              </Typography>
              <Typography variant="body2" paragraph>
                ‚Ä¢ –ù–µ —Ä–∞–∑–º–µ—â–∞–π—Ç–µ —Å–ø–∞–º –∏ —Ä–µ–∫–ª–∞–º—É
              </Typography>
              <Typography variant="body2" paragraph>
                ‚Ä¢ –ü—Ä–∏–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ—Å—å —Ç–µ–º–∞—Ç–∏–∫–∏ —Ä–∞–∑–¥–µ–ª–∞
              </Typography>
              <Typography variant="body2">
                ‚Ä¢ –°–æ–±–ª—é–¥–∞–π—Ç–µ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ –†–§
              </Typography>
            </CardContent>
            <CardActions sx={{ mt: 'auto', p: 2, pt: 0 }}>
              <Button size="small" color="primary">
                –ü–æ–ª–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞
              </Button>
            </CardActions>
          </Card>
        </Grid>
        <Grid size={{ xs: 12, md: 4 }}>
          <Card sx={{ 
            height: '100%', 
            display: 'flex', 
            flexDirection: 'column',
            borderRadius: 3,
            boxShadow: 2
          }}>
            <CardContent>
              <Typography variant="h6" sx={{ fontWeight: 600, mb: 2 }}>
                –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
              </Typography>
              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>
                {[1, 2, 3, 4, 5, 6, 7, 8].map((id) => (
                  <Avatar 
                    key={id}
                    src={`https://i.pravatar.cc/150?img=${id}`} 
                    alt={`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${id}`}
                    sx={{ width: 40, height: 40 }}
                  />
                ))}
                <Avatar sx={{ width: 40, height: 40, bgcolor: 'primary.main' }}>+42</Avatar>
              </Box>
            </CardContent>
            <CardActions sx={{ mt: 'auto', p: 2, pt: 0 }}>
              <Button size="small" color="primary">
                –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
              </Button>
            </CardActions>
          </Card>
        </Grid>
      </Grid>
    </Container>
  );
};

export default ForumPage; 