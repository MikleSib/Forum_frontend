import React, { useState, useEffect, useRef } from 'react';
import { 
  Container, Box, Typography, Paper, Divider, Button, 
  Breadcrumbs, Avatar, Chip, IconButton, TextField,
  Card, CardContent, CardActions, Grid, Menu, MenuItem,
  ListItemIcon, ListItemText, CircularProgress, Tooltip
} from '@mui/material';
import { useParams, Link, useNavigate } from 'react-router-dom';
import ArrowBackIcon from '@mui/icons-material/ArrowBack';
import NavigateNextIcon from '@mui/icons-material/NavigateNext';
import PersonIcon from '@mui/icons-material/Person';
import ReplyIcon from '@mui/icons-material/Reply';
import MoreVertIcon from '@mui/icons-material/MoreVert';
import FlagIcon from '@mui/icons-material/Flag';
import EditIcon from '@mui/icons-material/Edit';
import DeleteIcon from '@mui/icons-material/Delete';
import LockIcon from '@mui/icons-material/Lock';
import PushPinIcon from '@mui/icons-material/PushPin';
import FormatQuoteIcon from '@mui/icons-material/FormatQuote';
import ThumbUpAltIcon from '@mui/icons-material/ThumbUpAlt';
import ThumbDownAltIcon from '@mui/icons-material/ThumbDownAlt';
import CloudUploadIcon from '@mui/icons-material/CloudUpload';
import InsertPhotoIcon from '@mui/icons-material/InsertPhoto';
import FormatQuoteRoundedIcon from '@mui/icons-material/FormatQuoteRounded';
import { userStore } from '../../shared/store/userStore';
import { forumCategories } from './index';
import { topicsData } from './CategoryDetail';
import ImageGallery from '../../components/ImageGallery';

// –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ—Å—Ç–æ–≤
interface PostImage {
  id: number;
  image_url: string;
  post_id?: number; // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ
  created_at?: string; // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ
}

interface PostAuthor {
  id: number;
  name: string;
  avatar: string;
  joinDate: string;
  postsCount: number;
  role: string;
}

interface QuotedPost {
  id: number;
  author: {
    id: number;
    name: string;
  };
  content: string;
}

interface Post {
  id: number;
  content: string;
  author: PostAuthor;
  createdAt: string;
  isTopicStarter: boolean;
  likes: number;
  dislikes: number;
  images?: PostImage[];
  quotedPost?: QuotedPost;
}

// –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ–º—ã
export const topicData = {
  id: 1,
  title: '–õ—É—á—à–∏–µ —Å–ø–∏–Ω–Ω–∏–Ω–≥–∏ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö',
  category: {
    id: 1,
    title: '–†—ã–±–æ–ª–æ–≤–Ω—ã–µ —Å–Ω–∞—Å—Ç–∏',
    icon: 'üé£'
  },
  author: {
    id: 1,
    name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä',
    avatar: 'https://i.pravatar.cc/150?img=1',
    joinDate: '–ú–∞–π 2022',
    postsCount: 128,
    role: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Ä—ã–±–æ–ª–æ–≤'
  },
  createdAt: '2 –¥–Ω—è –Ω–∞–∑–∞–¥',
  views: 678,
  isPinned: true,
  isClosed: false,
  tags: ['–ù–∞—á–∏–Ω–∞—é—â–∏–º', '–°–Ω–∞—Ä—è–∂–µ–Ω–∏–µ']
};

// –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ç–µ–º–µ
const postsData: Post[] = [
  {
    id: 1,
    content: `
–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç! –Ø –Ω–µ–¥–∞–≤–Ω–æ –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª—Å—è —Ä—ã–±–∞–ª–∫–æ–π –∏ —Ö–æ—á—É –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π —Å–ø–∏–Ω–Ω–∏–Ω–≥. 
–ë—é–¥–∂–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω, –Ω–æ —Ö–æ—á–µ—Ç—Å—è —á—Ç–æ-—Ç–æ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ, –Ω–∞ —á–µ–º –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ —É—á–∏—Ç—å—Å—è –∏ –ª–æ–≤–∏—Ç—å.

–ö–∞–∫–∏–µ –º–æ–¥–µ–ª–∏ —Å–ø–∏–Ω–Ω–∏–Ω–≥–æ–≤ –ø–æ—Å–æ–≤–µ—Ç—É–µ—Ç–µ –¥–ª—è –Ω–æ–≤–∏—á–∫–∞, –∫–æ—Ç–æ—Ä—ã–π —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–µ—Ç –æ—Å–≤–∞–∏–≤–∞—Ç—å —Å–ø–∏–Ω–Ω–∏–Ω–≥–æ–≤—É—é –ª–æ–≤–ª—é? 
–ò–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç —á—Ç–æ-—Ç–æ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –ª–æ–≤–∏—Ç—å –∫–∞–∫ –Ω–∞ –Ω–µ–±–æ–ª—å—à–∏—Ö —Ä–µ—á–∫–∞—Ö, —Ç–∞–∫ –∏ –Ω–∞ –≤–æ–¥–æ—Ö—Ä–∞–Ω–∏–ª–∏—â–∞—Ö.

–ó–∞—Ä–∞–Ω–µ–µ —Å–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–≤–µ—Ç—ã!
    `,
    author: {
      id: 1,
      name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä',
      avatar: 'https://i.pravatar.cc/150?img=1',
      joinDate: '–ú–∞–π 2022',
      postsCount: 128,
      role: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Ä—ã–±–æ–ª–æ–≤'
    },
    createdAt: '2 –¥–Ω—è –Ω–∞–∑–∞–¥',
    isTopicStarter: true,
    likes: 5,
    dislikes: 0
  },
  {
    id: 2,
    content: `
–ü—Ä–∏–≤–µ—Ç! –î–ª—è –Ω–∞—á–∏–Ω–∞—é—â–µ–≥–æ –º–æ–≥—É –ø–æ—Å–æ–≤–µ—Ç–æ–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –≤ –±—é–¥–∂–µ—Ç–Ω–æ–º —Å–µ–≥–º–µ–Ω—Ç–µ:

1. **Salmo Sniper SPIN** - —Ö–æ—Ä–æ—à–∏–π –±—é–¥–∂–µ—Ç–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç, –¥–æ–≤–æ–ª—å–Ω–æ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π. –ú–æ–∂–Ω–æ –±—Ä–∞—Ç—å —Å —Ç–µ—Å—Ç–æ–º 10-30–≥.

2. **Shimano Catana EX** - —á—É—Ç—å –¥–æ—Ä–æ–∂–µ, –Ω–æ –æ—á–µ–Ω—å –Ω–∞–¥–µ–∂–Ω—ã–π –∏ –ø—Ä–∏—è—Ç–Ω—ã–π –≤ —Ä–∞–±–æ—Ç–µ —Å–ø–∏–Ω–Ω–∏–Ω–≥. –¢–µ—Å—Ç 10-30–≥ –∏–ª–∏ 15-40–≥ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –∫–∞–∫—É—é —Ä—ã–±—É –ø–ª–∞–Ω–∏—Ä—É–µ—à—å –ª–æ–≤–∏—Ç—å.

3. **FAVORITE Laguna** - –Ω–µ–ø–ª–æ—Ö–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –ø–æ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—é —Ü–µ–Ω–∞/–∫–∞—á–µ—Å—Ç–≤–æ.

–ì–ª–∞–≤–Ω–æ–µ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø–µ—Ä–≤–æ–≥–æ —Å–ø–∏–Ω–Ω–∏–Ω–≥–∞ - –Ω–µ –≥–Ω–∞—Ç—å—Å—è –∑–∞ —É–ª—å—Ç—Ä–∞–ª–∞–π—Ç–æ–º –∏–ª–∏ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –º–æ–¥–µ–ª—è–º–∏. –õ—É—á—à–µ –≤–∑—è—Ç—å —á—Ç–æ-—Ç–æ —Å—Ä–µ–¥–Ω–µ–µ –ø–æ —Ç–µ—Å—Ç—É –∏ –∂–µ—Å—Ç–∫–æ—Å—Ç–∏, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –æ—Å–≤–æ–∏—Ç—å —Ä–∞–∑–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –ª–æ–≤–ª–∏ –∏ –ø–æ–Ω—è—Ç—å, —á—Ç–æ —Ç–µ–±–µ –±–æ–ª—å—à–µ –Ω—Ä–∞–≤–∏—Ç—Å—è.

–£–¥–∞—á–∏ –≤ –≤—ã–±–æ—Ä–µ!
    `,
    author: {
      id: 2,
      name: '–ú–∏—Ö–∞–∏–ª',
      avatar: 'https://i.pravatar.cc/150?img=2',
      joinDate: '–§–µ–≤—Ä–∞–ª—å 2020',
      postsCount: 543,
      role: '–≠–∫—Å–ø–µ—Ä—Ç –ø–æ —Å–Ω–∞—Å—Ç—è–º'
    },
    createdAt: '2 –¥–Ω—è –Ω–∞–∑–∞–¥',
    isTopicStarter: false,
    likes: 8,
    dislikes: 0
  },
  {
    id: 3,
    content: `
–ü–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≥–ª–∞—Å–Ω–∞ —Å –ú–∏—Ö–∞–∏–ª–æ–º –Ω–∞—Å—á–µ—Ç —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —Å–ø–∏–Ω–Ω–∏–Ω–≥–∞!

–Ø –±—ã –µ—â–µ –¥–æ–±–∞–≤–∏–ª–∞ –≤ —Å–ø–∏—Å–æ–∫:

**Major Craft Finetail** - –æ—Ç–ª–∏—á–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö, —Ö–æ—Ä–æ—à–∞—è —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ –ø—Ä–∏ —ç—Ç–æ–º –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–∞—è –ø—Ä–æ—á–Ω–æ—Å—Ç—å.

**Daiwa Ninja** - —Ç–æ–∂–µ —Ö–æ—Ä–æ—à–∏–π –≤–∞—Ä–∏–∞–Ω—Ç –≤ –±—é–¥–∂–µ—Ç–Ω–æ–º —Å–µ–≥–º–µ–Ω—Ç–µ.

–ò –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ - –Ω–µ –∑–∞–±—É–¥—å –ø—Ä–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Ä –∫–∞—Ç—É—à–∫–∏! –î–∞–∂–µ –∫ –Ω–µ–¥–æ—Ä–æ–≥–æ–º—É —Å–ø–∏–Ω–Ω–∏–Ω–≥—É –ª—É—á—à–µ –≤–∑—è—Ç—å –∫–∞—Ç—É—à–∫—É –ø—Ä–∏–ª–∏—á–Ω–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞. Shimano Nexave –∏–ª–∏ Daiwa Ninja –ø–æ–¥–æ–π–¥—É—Ç –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–æ.

–¢–∞–∫–∂–µ —Å–æ–≤–µ—Ç—É—é –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –ø–ª–µ—Ç–µ–Ω—ã–π —à–Ω—É—Ä –≤–º–µ—Å—Ç–æ –º–æ–Ω–æ–ª–µ—Å–∫–∏ –¥–ª—è —Å–ø–∏–Ω–Ω–∏–Ω–≥–∞ - —Å –Ω–∏–º —Ç—ã –±—É–¥–µ—à—å –ª—É—á—à–µ —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –ø–æ–∫–ª–µ–≤–∫–∏.
    `,
    author: {
      id: 3,
      name: '–ï–ª–µ–Ω–∞',
      avatar: 'https://i.pravatar.cc/150?img=3',
      joinDate: '–ò—é–Ω—å 2021',
      postsCount: 231,
      role: '–ê–∫—Ç–∏–≤–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫'
    },
    createdAt: '1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥',
    isTopicStarter: false,
    likes: 6,
    dislikes: 0
  },
  {
    id: 4,
    content: `
–°–ø–∞—Å–∏–±–æ –≤—Å–µ–º –∑–∞ —Å–æ–≤–µ—Ç—ã! 

@–ú–∏—Ö–∞–∏–ª, @–ï–ª–µ–Ω–∞ - –æ—á–µ–Ω—å —Ü–µ–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏, –∏–∑—É—á—É –≤—Å–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã. 

–í–æ–ø—Ä–æ—Å –ø—Ä–æ –¥–ª–∏–Ω—É - –∫–∞–∫—É—é –æ–ø—Ç–∏–º–∞–ª—å–Ω—É—é –¥–ª–∏–Ω—É —Å–ø–∏–Ω–Ω–∏–Ω–≥–∞ –ø–æ—Å–æ–≤–µ—Ç—É–µ—Ç–µ –¥–ª—è –Ω–æ–≤–∏—á–∫–∞? –í–∏–¥–µ–ª –º–æ–¥–µ–ª–∏ –æ—Ç 1.8–º –¥–æ 2.7–º, –∏ –Ω–µ –º–æ–≥—É –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å—Å—è.
    `,
    author: {
      id: 1,
      name: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä',
      avatar: 'https://i.pravatar.cc/150?img=1',
      joinDate: '–ú–∞–π 2022',
      postsCount: 128,
      role: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Ä—ã–±–æ–ª–æ–≤'
    },
    createdAt: '1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥',
    isTopicStarter: true,
    likes: 1,
    dislikes: 0,
    quotedPost: {
      id: 3,
      author: {
        id: 3,
        name: '–ï–ª–µ–Ω–∞'
      },
      content: '–ò –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ - –Ω–µ –∑–∞–±—É–¥—å –ø—Ä–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Ä –∫–∞—Ç—É—à–∫–∏! –î–∞–∂–µ –∫ –Ω–µ–¥–æ—Ä–æ–≥–æ–º—É —Å–ø–∏–Ω–Ω–∏–Ω–≥—É –ª—É—á—à–µ –≤–∑—è—Ç—å –∫–∞—Ç—É—à–∫—É –ø—Ä–∏–ª–∏—á–Ω–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞.'
    }
  },
  {
    id: 5,
    content: `
–ù–∞—Å—á–µ—Ç –¥–ª–∏–Ω—ã —Å–ø–∏–Ω–Ω–∏–Ω–≥–∞ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–µ–≥–æ:

–ï—Å–ª–∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø–ª–∞–Ω–∏—Ä—É–µ—à—å –ª–æ–≤–∏—Ç—å —Å –±–µ—Ä–µ–≥–∞ –Ω–∞ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –≤–æ–¥–æ–µ–º–∞—Ö - –±–µ—Ä–∏ 2.4-2.7–º. –≠—Ç–æ –¥–∞—Å—Ç —Ç–µ–±–µ —Ö–æ—Ä–æ—à–∏–π –∑–∞–±—Ä–æ—Å –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –º–∞–Ω–∏–ø—É–ª–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–º–∞–Ω–∫–æ–π –Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏.

–ï—Å–ª–∏ —á–∞—Å—Ç–æ –±—É–¥–µ—à—å —Ä—ã–±–∞—á–∏—Ç—å –≤ —Å—Ç–µ—Å–Ω–µ–Ω–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö (–Ω–µ–±–æ–ª—å—à–∏–µ —Ä–µ—á–∫–∏ —Å –∑–∞—Ä–æ—Å—à–∏–º–∏ –±–µ—Ä–µ–≥–∞–º–∏) - –º–æ–∂–Ω–æ –≤–∑—è—Ç—å –ø–æ–∫–æ—Ä–æ—á–µ, 2.1-2.4–º.

–°–ø–∏–Ω–Ω–∏–Ω–≥–∏ –∫–æ—Ä–æ—á–µ 2.1–º –æ–±—ã—á–Ω–æ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ª–æ–≤–ª–∏ –∏–ª–∏ —Å –ª–æ–¥–∫–∏.

–ü–æ –º–æ–µ–º—É –æ–ø—ã—Ç—É, –¥–ª—è –Ω–æ–≤–∏—á–∫–∞ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ 2.4–º - —Ç–∞–∫–∞—è –¥–ª–∏–Ω–∞ –¥–æ–≤–æ–ª—å–Ω–æ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞.
    `,
    author: {
      id: 5,
      name: '–°–µ—Ä–≥–µ–π',
      avatar: 'https://i.pravatar.cc/150?img=5',
      joinDate: '–ú–∞—Ä—Ç 2019',
      postsCount: 872,
      role: '–ú–µ—Å—Ç–Ω–∞—è –ª–µ–≥–µ–Ω–¥–∞'
    },
    createdAt: '20 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥',
    isTopicStarter: false,
    likes: 4,
    dislikes: 0
  },
  {
    id: 6,
    content: `
–ê —á—Ç–æ –Ω–∞—Å—á–µ—Ç –∫–∞–∫–∏—Ö-—Ç–æ –∫–∏—Ç–∞–π—Å–∫–∏—Ö —Å–ø–∏–Ω–Ω–∏–Ω–≥–æ–≤ –Ω–∞ Aliexpress? –í–∏–¥–µ–ª —Ç–∞–º –º–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø–æ –Ω–∏–∑–∫–∏–º —Ü–µ–Ω–∞–º. –°—Ç–æ–∏—Ç –ª–∏ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Ç–∞–∫–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∏–ª–∏ –ª—É—á—à–µ –Ω–µ —Ä–∏—Å–∫–æ–≤–∞—Ç—å?
    `,
    author: {
      id: 4,
      name: '–î–º–∏—Ç—Ä–∏–π',
      avatar: 'https://i.pravatar.cc/150?img=4',
      joinDate: '–Ø–Ω–≤–∞—Ä—å 2022',
      postsCount: 47,
      role: '–ù–æ–≤–∏—á–æ–∫'
    },
    createdAt: '12 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥',
    isTopicStarter: false,
    likes: 0,
    dislikes: 1
  },
  {
    id: 7,
    content: `
@–î–º–∏—Ç—Ä–∏–π, –∏–∑ –ª–∏—á–Ω–æ–≥–æ –æ–ø—ã—Ç–∞ —Å–∫–∞–∂—É - —Å –∫–∏—Ç–∞–π—Å–∫–∏–º–∏ —Å–ø–∏–Ω–Ω–∏–Ω–≥–∞–º–∏ –Ω—É–∂–Ω–æ –±—ã—Ç—å –æ—á–µ–Ω—å –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã–º. –ï—Å—Ç—å –Ω–µ–ø–ª–æ—Ö–∏–µ –º–æ–¥–µ–ª–∏, –Ω–æ –Ω–∞–π—Ç–∏ –∏—Ö —Å—Ä–µ–¥–∏ –º–æ—Ä—è –æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω–æ–≥–æ —à–ª–∞–∫–∞ —Å–ª–æ–∂–Ω–æ.

–ï—Å–ª–∏ —É–∂ –æ—á–µ–Ω—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –±—é–¥–∂–µ—Ç, —Ç–æ –ª—É—á—à–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –±/—É —Å–ø–∏–Ω–Ω–∏–Ω–≥–∏ –æ—Ç –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –±—Ä–µ–Ω–¥–æ–≤ –Ω–∞ –º–µ—Å—Ç–Ω—ã—Ö –¥–æ—Å–∫–∞—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π –∏–ª–∏ —Ñ–æ—Ä—É–º–∞—Ö.

–ê –µ—Å–ª–∏ –≤—Å—ë –∂–µ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∫–∏—Ç–∞–π—Å–∫–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã, —Ç–æ –º–æ–≥—É –ø–æ—Å–æ–≤–µ—Ç–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ Tsurinoya –∏ Kastking - —ç—Ç–∏ –±—Ä–µ–Ω–¥—ã –∑–∞—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–ª–∏ —Å–µ–±—è –Ω–µ–ø–ª–æ—Ö–æ –¥–∞–∂–µ —Å—Ä–µ–¥–∏ –æ–ø—ã—Ç–Ω—ã—Ö —Ä—ã–±–æ–ª–æ–≤–æ–≤. –ù–æ –≤—Å—ë —Ä–∞–≤–Ω–æ –µ—Å—Ç—å —Ä–∏—Å–∫ –Ω–∞—Ä–≤–∞—Ç—å—Å—è –Ω–∞ –ø–æ–¥–¥–µ–ª–∫—É.

@–ê–ª–µ–∫—Å–∞–Ω–¥—Ä, –∫–∞–∫ —É—Å–ø–µ—Ö–∏ –≤ –≤—ã–±–æ—Ä–µ? –ù–∞ —á–µ–º –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –≤ –∏—Ç–æ–≥–µ?
    `,
    author: {
      id: 2,
      name: '–ú–∏—Ö–∞–∏–ª',
      avatar: 'https://i.pravatar.cc/150?img=2',
      joinDate: '–§–µ–≤—Ä–∞–ª—å 2020',
      postsCount: 543,
      role: '–≠–∫—Å–ø–µ—Ä—Ç –ø–æ —Å–Ω–∞—Å—Ç—è–º'
    },
    createdAt: '5 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥',
    isTopicStarter: false,
    likes: 3,
    dislikes: 0
  }
];

const TopicDetail: React.FC = () => {
  const { topicId } = useParams<{ topicId: string }>();
  const navigate = useNavigate();
  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);
  const [currentPostId, setCurrentPostId] = useState<number | null>(null);
  const [selectionAnchorEl, setSelectionAnchorEl] = useState<null | HTMLElement>(null);
  const [selectedText, setSelectedText] = useState<{text: string, postId: number, author: string} | null>(null);
  const selectionTimeout = useRef<NodeJS.Timeout | null>(null);
  const [topic, setTopic] = useState(topicData);
  const [posts, setPosts] = useState<Post[]>(postsData);
  const [userLikes, setUserLikes] = useState<number[]>([]);
  const [userDislikes, setUserDislikes] = useState<number[]>([]);
  const [replyContent, setReplyContent] = useState('');
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [images, setImages] = useState<PostImage[]>([]);
  const [isCompressing, setIsCompressing] = useState(false);
  const [quoteData, setQuoteData] = useState<{id: number, author: string, content: string} | null>(null);
  
  const open = Boolean(anchorEl);
  const isAuth = !!userStore.user; // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  
  useEffect(() => {
    if (topicId) {
      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã API-–∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ç–µ–º—ã
      // –ò–º–∏—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –º–æ–∫–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      const foundTopic = topicsData.find(t => t.id === parseInt(topicId));
      if (foundTopic) {
        const matchingCategory = forumCategories.find(c => c.title === topic.category.title);
        setTopic({
          ...topic,
          title: foundTopic.title,
          category: {
            ...topic.category,
            id: matchingCategory?.id || topic.category.id
          },
          author: foundTopic.author as unknown as typeof topic.author, // –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Ç–∏–ø–æ–≤
          createdAt: foundTopic.createdAt,
          views: foundTopic.views,
          isPinned: foundTopic.isPinned || false,
          isClosed: foundTopic.isClosed || false,
          tags: foundTopic.tags || []
        });
      }
    }
  }, [topicId]);

  const handleMenuClick = (event: React.MouseEvent<HTMLElement>, postId: number) => {
    setAnchorEl(event.currentTarget);
    setCurrentPostId(postId);
  };
  
  const handleMenuClose = () => {
    setAnchorEl(null);
    setCurrentPostId(null);
  };

  const handleQuote = (postId: number) => {
    const postToQuote = posts.find(post => post.id === postId);
    if (!postToQuote) return;
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–µ —Ü–∏—Ç–∞—Ç—ã –±–µ–∑ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ textarea
    setQuoteData({
      id: postId,
      author: postToQuote.author.name,
      content: postToQuote.content.trim().substring(0, 150) + (postToQuote.content.length > 150 ? '...' : '')
    });
    
    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ —Ñ–æ—Ä–º–µ –æ—Ç–≤–µ—Ç–∞
    const replyForm = document.getElementById('reply-form');
    if (replyForm) {
      replyForm.scrollIntoView({ behavior: 'smooth' });
      
      // –ê–Ω–∏–º–∞—Ü–∏—è –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –≤–Ω–∏–º–∞–Ω–∏—è
      replyForm.style.transition = 'box-shadow 0.3s ease-in-out';
      replyForm.style.boxShadow = '0 0 15px rgba(25, 118, 210, 0.5)';
      
      setTimeout(() => {
        if (replyForm) {
          replyForm.style.boxShadow = 'none';
        }
      }, 1000);
    }
    
    handleMenuClose();
  };

  const handleLike = (postId: number) => {
    setPosts(posts.map(post => 
      post.id === postId 
        ? { ...post, likes: userLikes.includes(postId) ? post.likes - 1 : post.likes + 1 } 
        : post
    ));
    
    setUserLikes(prev => 
      prev.includes(postId) 
        ? prev.filter(id => id !== postId) 
        : [...prev, postId]
    );
    
    // –ï—Å–ª–∏ –ø–æ—Å—Ç –±—ã–ª –¥–∏–∑–ª–∞–π–∫–Ω—É—Ç, —É–±–∏—Ä–∞–µ–º –¥–∏–∑–ª–∞–π–∫
    if (userDislikes.includes(postId)) {
      setPosts(posts.map(post => 
        post.id === postId 
          ? { ...post, dislikes: post.dislikes - 1 } 
          : post
      ));
      
      setUserDislikes(prev => prev.filter(id => id !== postId));
    }
  };
  
  const handleDislike = (postId: number) => {
    setPosts(posts.map(post => 
      post.id === postId 
        ? { ...post, dislikes: userDislikes.includes(postId) ? post.dislikes - 1 : post.dislikes + 1 } 
        : post
    ));
    
    setUserDislikes(prev => 
      prev.includes(postId) 
        ? prev.filter(id => id !== postId) 
        : [...prev, postId]
    );
    
    // –ï—Å–ª–∏ –ø–æ—Å—Ç –±—ã–ª –ª–∞–π–∫–Ω—É—Ç, —É–±–∏—Ä–∞–µ–º –ª–∞–π–∫
    if (userLikes.includes(postId)) {
      setPosts(posts.map(post => 
        post.id === postId 
          ? { ...post, likes: post.likes - 1 } 
          : post
      ));
      
      setUserLikes(prev => prev.filter(id => id !== postId));
    }
  };

  const handleImageUpload = (event: React.ChangeEvent<HTMLInputElement>) => {
    const files = event.target.files;
    if (!files || files.length === 0) return;
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–º–∞–∫—Å–∏–º—É–º 5)
    if (images.length + files.length > 5) {
      alert('–ú–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–µ –±–æ–ª–µ–µ 5 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
      return;
    }
    
    setIsCompressing(true);
    
    // –ò–º–∏—Ç–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    setTimeout(() => {
      const newImages: PostImage[] = Array.from(files).map((file, index) => ({
        id: Date.now() + index,
        image_url: URL.createObjectURL(file)
      }));
      
      setImages(prev => [...prev, ...newImages]);
      setIsCompressing(false);
    }, 1000);
  };
  
  const handleDrop = (event: React.DragEvent<HTMLDivElement>) => {
    event.preventDefault();
    
    const files = event.dataTransfer.files;
    if (!files || files.length === 0) return;
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const imageFiles = Array.from(files).filter(file => 
      file.type.startsWith('image/')
    );
    
    if (imageFiles.length === 0) return;
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–º–∞–∫—Å–∏–º—É–º 5)
    if (images.length + imageFiles.length > 5) {
      alert('–ú–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–µ –±–æ–ª–µ–µ 5 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
      return;
    }
    
    setIsCompressing(true);
    
    // –ò–º–∏—Ç–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    setTimeout(() => {
      const newImages: PostImage[] = imageFiles.map((file, index) => ({
        id: Date.now() + index,
        image_url: URL.createObjectURL(file)
      }));
      
      setImages(prev => [...prev, ...newImages]);
      setIsCompressing(false);
    }, 1000);
  };
  
  const handleDragOver = (event: React.DragEvent<HTMLDivElement>) => {
    event.preventDefault();
  };
  
  const removeImage = (id: number) => {
    setImages(images.filter(img => img.id !== id));
  };
  
  const handleReply = () => {
    if (!replyContent.trim() && images.length === 0) return;
    
    setIsSubmitting(true);
    
    // –ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞
    setTimeout(() => {
      const newPost: Post = {
        id: Date.now(),
        content: replyContent,
        author: {
          id: userStore.user?.id || 1,
          name: userStore.user?.username || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
          avatar: userStore.user?.avatar || 'https://i.pravatar.cc/150?img=1',
          joinDate: '–ú–∞–π 2023',
          postsCount: 10,
          role: '–£—á–∞—Å—Ç–Ω–∏–∫ —Ñ–æ—Ä—É–º–∞'
        },
        createdAt: '—Ç–æ–ª—å–∫–æ —á—Ç–æ',
        isTopicStarter: topic.author.id === (userStore.user?.id || 1),
        likes: 0,
        dislikes: 0,
        images: images.length > 0 ? images : undefined,
        quotedPost: quoteData ? {
          id: quoteData.id,
          author: {
            id: 0,
            name: quoteData.author
          },
          content: quoteData.content
        } : undefined
      };
      
      setPosts([...posts, newPost]);
      setReplyContent('');
      setImages([]);
      setQuoteData(null);
      setIsSubmitting(false);
    }, 1500);
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–¥–µ–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
  const handleTextSelection = (event: React.MouseEvent, post: Post) => {
    const selection = window.getSelection();
    
    if (selection && selection.toString().trim().length > 0) {
      // –ï—Å—Ç—å –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
      const text = selection.toString().trim();
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å—Ç–µ
      setSelectedText({
        text,
        postId: post.id,
        author: post.author.name
      });
      
      // –ü–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤—ã–¥–µ–ª–µ–Ω–∏—è –¥–ª—è –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –º–µ–Ω—é
      const range = selection.getRangeAt(0);
      const rect = range.getBoundingClientRect();
      
      // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ –º–µ–Ω—é
      const tempButton = document.createElement('div');
      tempButton.style.position = 'absolute';
      tempButton.style.left = `${rect.left + window.scrollX + (rect.width / 2)}px`;
      tempButton.style.top = `${rect.bottom + window.scrollY}px`;
      tempButton.style.width = '1px';
      tempButton.style.height = '1px';
      document.body.appendChild(tempButton);
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —è–∫–æ—Ä—å –¥–ª—è –º–µ–Ω—é
      setSelectionAnchorEl(tempButton);
      
      // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–µ—Ä, –µ—Å–ª–∏ –æ–Ω –±—ã–ª
      if (selectionTimeout.current) {
        clearTimeout(selectionTimeout.current);
      }
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–µ—Ç —Å –Ω–∏–º
      selectionTimeout.current = setTimeout(() => {
        setSelectionAnchorEl(null);
        setSelectedText(null);
        if (document.body.contains(tempButton)) {
          document.body.removeChild(tempButton);
        }
      }, 3000);
    }
  };
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
  const handleQuoteSelectedText = () => {
    if (!selectedText) return;
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–µ —Ü–∏—Ç–∞—Ç—ã –±–µ–∑ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ textarea
    setQuoteData({
      id: selectedText.postId,
      author: selectedText.author,
      content: selectedText.text
    });
    
    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫ —Ñ–æ—Ä–º–µ –æ—Ç–≤–µ—Ç–∞
    const replyForm = document.getElementById('reply-form');
    if (replyForm) {
      replyForm.scrollIntoView({ behavior: 'smooth' });
      
      // –ê–Ω–∏–º–∞—Ü–∏—è –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –≤–Ω–∏–º–∞–Ω–∏—è
      replyForm.style.transition = 'box-shadow 0.3s ease-in-out';
      replyForm.style.boxShadow = '0 0 15px rgba(25, 118, 210, 0.5)';
      
      setTimeout(() => {
        if (replyForm) {
          replyForm.style.boxShadow = 'none';
        }
      }, 1000);
    }
    
    // –û—á–∏—â–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é
    if (selectionAnchorEl instanceof HTMLElement && document.body.contains(selectionAnchorEl)) {
      document.body.removeChild(selectionAnchorEl);
    }
    setSelectionAnchorEl(null);
    setSelectedText(null);
    window.getSelection()?.removeAllRanges();
  };
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –≤–Ω–µ –≤—ã–¥–µ–ª–µ–Ω–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é
  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∏–∫ –±—ã–ª –≤–Ω–µ –º–µ–Ω—é –≤—ã–¥–µ–ª–µ–Ω–∏—è
      if (
        selectionAnchorEl && 
        !(event.target instanceof Node && (event.target as Element).closest?.('.selection-quote-button'))
      ) {
        if (selectionAnchorEl instanceof HTMLElement && document.body.contains(selectionAnchorEl)) {
          document.body.removeChild(selectionAnchorEl);
        }
        setSelectionAnchorEl(null);
        setSelectedText(null);
      }
    };
    
    document.addEventListener('mousedown', handleClickOutside);
    
    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
      if (selectionTimeout.current) {
        clearTimeout(selectionTimeout.current);
      }
      if (selectionAnchorEl instanceof HTMLElement && document.body.contains(selectionAnchorEl)) {
        document.body.removeChild(selectionAnchorEl);
      }
    };
  }, [selectionAnchorEl]);

  if (!topic) {
    return (
      <Container maxWidth="lg" sx={{ py: 4 }}>
        <Typography variant="h5">–ó–∞–≥—Ä—É–∑–∫–∞...</Typography>
      </Container>
    );
  }

  return (
    <Container maxWidth="lg" sx={{ py: 4 }}>
      {/* –•–ª–µ–±–Ω—ã–µ –∫—Ä–æ—à–∫–∏ –∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <Box sx={{ mb: 3 }}>
        <Breadcrumbs separator={<NavigateNextIcon fontSize="small" />}>
          <Link to="/" style={{ textDecoration: 'none', color: 'inherit' }}>
            <Typography color="text.primary">–ì–ª–∞–≤–Ω–∞—è</Typography>
          </Link>
          <Link to="/forum" style={{ textDecoration: 'none', color: 'inherit' }}>
            <Typography color="text.primary">–§–æ—Ä—É–º</Typography>
          </Link>
          <Link to={`/forum/category/${topic.category.id}`} style={{ textDecoration: 'none', color: 'inherit' }}>
            <Typography color="text.primary">{topic.category.title}</Typography>
          </Link>
          <Typography color="text.primary" fontWeight={500}>{topic.title}</Typography>
        </Breadcrumbs>

        <Box sx={{ display: 'flex', alignItems: 'center', mt: 2, mb: 3, gap: 2 }}>
          <IconButton 
            sx={{ bgcolor: 'action.hover' }} 
            onClick={() => navigate(`/forum/category/${topic.category.id}`)}
          >
            <ArrowBackIcon />
          </IconButton>
          <Box>
            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, flexWrap: 'wrap' }}>
              {topic.isPinned && (
                <Chip 
                  size="small" 
                  label="–ó–∞–∫—Ä–µ–ø–ª–µ–Ω–æ" 
                  sx={{ 
                    bgcolor: 'primary.main', 
                    color: 'white',
                    height: 24,
                    fontSize: '0.7rem',
                    fontWeight: 600
                  }} 
                />
              )}
              {topic.isClosed && (
                <Chip 
                  size="small" 
                  label="–ó–∞–∫—Ä—ã—Ç–æ" 
                  sx={{ 
                    bgcolor: 'text.secondary', 
                    color: 'white',
                    height: 24,
                    fontSize: '0.7rem',
                    fontWeight: 600
                  }} 
                />
              )}
              <Typography variant="h4" component="h1" sx={{ fontWeight: 700 }}>
                {topic.title}
              </Typography>
            </Box>
            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, flexWrap: 'wrap', mt: 1 }}>
              <Box sx={{ display: 'flex', alignItems: 'center', gap: 0.5 }}>
                <PersonIcon fontSize="small" color="action" />
                <Typography variant="body2" color="text.secondary">
                  {topic.author.name}
                </Typography>
              </Box>
              <Typography variant="body2" color="text.secondary">
                ‚Ä¢
              </Typography>
              <Typography variant="body2" color="text.secondary">
                {topic.createdAt}
              </Typography>
              <Typography variant="body2" color="text.secondary">
                ‚Ä¢
              </Typography>
              <Typography variant="body2" color="text.secondary">
                {topic.views} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
              </Typography>
            </Box>
            <Box sx={{ display: 'flex', gap: 0.5, flexWrap: 'wrap', mt: 1 }}>
              {topic.tags.map((tag: string, index: number) => (
                <Chip 
                  key={index}
                  size="small" 
                  label={tag} 
                  sx={{ 
                    bgcolor: 'action.hover', 
                    height: 24,
                    fontSize: '0.75rem'
                  }} 
                />
              ))}
            </Box>
          </Box>
        </Box>
      </Box>

      {/* –°–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ–º–µ */}
      <Box sx={{ mb: 4 }}>
        {posts.map((post) => (
          <Paper 
            key={post.id} 
            elevation={0} 
            sx={{ 
              mb: 2, 
              borderRadius: 3, 
              border: '1px solid', 
              borderColor: 'divider',
              overflow: 'hidden'
            }}
          >
            <Grid container>
              <Grid size={{ xs: 12, md: 3 }} sx={{ 
                p: 2, 
                bgcolor: 'action.hover',
                borderRight: { xs: 'none', md: '1px solid' },
                borderBottom: { xs: '1px solid', md: 'none' },
                borderColor: 'divider',
                display: 'flex',
                flexDirection: 'column',
                alignItems: 'center',
                textAlign: 'center'
              }}>
                <Avatar 
                  src={post.author.avatar} 
                  alt={post.author.name}
                  sx={{ width: 80, height: 80, mb: 1 }}
                />
                <Typography variant="subtitle1" fontWeight={600}>
                  {post.author.name}
                </Typography>
                {post.isTopicStarter && (
                  <Chip 
                    size="small" 
                    label="–ê–≤—Ç–æ—Ä —Ç–µ–º—ã" 
                    sx={{ 
                      bgcolor: 'primary.main', 
                      color: 'white',
                      height: 20,
                      fontSize: '0.7rem',
                      mt: 0.5
                    }} 
                  />
                )}
                <Typography variant="body2" color="text.secondary" sx={{ mt: 1 }}>
                  {post.author.role}
                </Typography>
                <Typography variant="body2" color="text.secondary" sx={{ mt: 0.5 }}>
                  –ù–∞ —Ñ–æ—Ä—É–º–µ —Å {post.author.joinDate}
                </Typography>
                <Typography variant="body2" color="text.secondary" sx={{ mt: 0.5 }}>
                  –°–æ–æ–±—â–µ–Ω–∏–π: {post.author.postsCount}
                </Typography>
              </Grid>
              <Grid size={{ xs: 12, md: 9 }}>
                <Box sx={{ p: 2, position: 'relative', height: '100%' }}>
                  <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>
                    <Typography variant="body2" color="text.secondary">
                      {post.createdAt}
                    </Typography>
                    <IconButton 
                      size="small" 
                      onClick={(e) => handleMenuClick(e, post.id)}
                    >
                      <MoreVertIcon fontSize="small" />
                    </IconButton>
                  </Box>
                  
                  {post.quotedPost && (
                    <Paper 
                      elevation={0} 
                      sx={{ 
                        p: 1.5, 
                        mb: 2, 
                        bgcolor: 'action.hover', 
                        borderLeft: '4px solid',
                        borderColor: 'primary.light',
                        borderRadius: 1
                      }}
                    >
                      <Typography variant="body2" color="text.secondary" sx={{ fontStyle: 'italic', mb: 0.5 }}>
                        {post.quotedPost.author.name} –ø–∏—Å–∞–ª(–∞):
                      </Typography>
                      <Typography variant="body2">
                        {post.quotedPost.content}
                      </Typography>
                    </Paper>
                  )}
                  
                  <Typography 
                    variant="body1" 
                    sx={{ 
                      whiteSpace: 'pre-line',
                      mb: post.images && post.images.length > 0 ? 2 : 3
                    }}
                    onMouseUp={(e) => handleTextSelection(e, post)}
                  >
                    {post.content}
                  </Typography>
                  
                  {post.images && post.images.length > 0 && (
                    <Box sx={{ mb: 3 }}>
                      <ImageGallery images={post.images as any[]} />
                    </Box>
                  )}
                  
                  <Box sx={{ 
                    display: 'flex', 
                    gap: 2, 
                    mt: 'auto',
                    position: 'absolute',
                    bottom: 16,
                    left: 16
                  }}>
                    <Button 
                      variant="text" 
                      size="small" 
                      startIcon={<ThumbUpAltIcon />}
                      onClick={() => handleLike(post.id)}
                      sx={{ 
                        color: userLikes.includes(post.id) ? 'success.main' : 'text.secondary',
                        minWidth: 0
                      }}
                    >
                      {post.likes}
                    </Button>
                    <Button 
                      variant="text" 
                      size="small" 
                      startIcon={<ThumbDownAltIcon />}
                      onClick={() => handleDislike(post.id)}
                      sx={{ 
                        color: userDislikes.includes(post.id) ? 'error.main' : 'text.secondary',
                        minWidth: 0
                      }}
                    >
                      {post.dislikes}
                    </Button>
                  </Box>
                </Box>
              </Grid>
            </Grid>
          </Paper>
        ))}
      </Box>

      {/* –§–æ—Ä–º–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ */}
      {!topic.isClosed && isAuth ? (
        <Paper 
          id="reply-form"
          elevation={0} 
          sx={{ 
            p: 3, 
            borderRadius: 3, 
            border: '1px solid', 
            borderColor: 'divider'
          }}
        >
          <Typography variant="h6" sx={{ mb: 2, fontWeight: 600 }}>
            –û—Ç–≤–µ—Ç–∏—Ç—å –≤ —Ç–µ–º—É
          </Typography>
          
          {quoteData && (
            <Paper 
              elevation={0} 
              sx={{ 
                p: 1.5, 
                mb: 2, 
                bgcolor: 'action.hover', 
                borderLeft: '4px solid',
                borderColor: 'primary.light',
                borderRadius: 1,
                position: 'relative'
              }}
            >
              <IconButton 
                size="small" 
                sx={{ 
                  position: 'absolute', 
                  top: 4, 
                  right: 4,
                  width: 20,
                  height: 20
                }}
                onClick={() => {
                  console.log('–£–¥–∞–ª–µ–Ω–∏–µ —Ü–∏—Ç–∞—Ç—ã');
                  setQuoteData(null);
                }}
              >
                <DeleteIcon fontSize="small" />
              </IconButton>
              <Typography variant="body2" color="text.secondary" sx={{ fontStyle: 'italic', mb: 0.5 }}>
                {quoteData.author} –ø–∏—Å–∞–ª(–∞):
              </Typography>
              <Typography variant="body2">
                {quoteData.content}
              </Typography>
            </Paper>
          )}
          
          <TextField
            fullWidth
            multiline
            minRows={4}
            maxRows={10}
            placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
            value={replyContent}
            onChange={(e) => setReplyContent(e.target.value)}
            sx={{ mb: 2 }}
          />
          
          {/* –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */}
          <Box sx={{ mb: 2 }}>
            <Typography variant="subtitle1" sx={{ mb: 1 }}>
              –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ({images.length}/5)
            </Typography>
            
            <Box 
              sx={{ 
                border: '2px dashed',
                borderColor: 'divider',
                borderRadius: 2,
                p: 3,
                textAlign: 'center',
                mb: 2,
                cursor: 'pointer',
                transition: 'background-color 0.2s',
                '&:hover': {
                  bgcolor: 'action.hover',
                }
              }}
              onDrop={handleDrop}
              onDragOver={handleDragOver}
              onClick={() => document.getElementById('forum-image-upload')?.click()}
            >
              {isCompressing ? (
                <Box sx={{ 
                  display: 'flex', 
                  flexDirection: 'column', 
                  alignItems: 'center',
                  justifyContent: 'center',
                  py: 2
                }}>
                  <CircularProgress size={40} color="primary" />
                  <Typography variant="body2" sx={{ mt: 1.5 }}>
                    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...
                  </Typography>
                </Box>
              ) : (
                <>
                  <InsertPhotoIcon sx={{ fontSize: 48, color: 'action.active', mb: 1 }} />
                  <Typography variant="body1" sx={{ mb: 1 }}>
                    –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—é–¥–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞
                  </Typography>
                  <input
                    type="file"
                    accept="image/*"
                    multiple
                    onChange={handleImageUpload}
                    style={{ display: 'none' }}
                    id="forum-image-upload"
                    disabled={images.length >= 5}
                  />
                  <Button 
                    variant="outlined" 
                    color="primary"
                    startIcon={<CloudUploadIcon />}
                    disabled={images.length >= 5}
                    onClick={(e) => {
                      e.stopPropagation();
                      document.getElementById('forum-image-upload')?.click();
                    }}
                  >
                    –í—ã–±—Ä–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                  </Button>
                </>
              )}
            </Box>
            
            {/* –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */}
            {images.length > 0 && (
              <Box sx={{ 
                display: 'flex', 
                flexWrap: 'wrap', 
                gap: 1,
                mb: 2
              }}>
                {images.map(img => (
                  <Box 
                    key={img.id} 
                    sx={{ 
                      position: 'relative',
                      width: 100,
                      height: 100,
                      borderRadius: 1,
                      overflow: 'hidden',
                      border: '1px solid',
                      borderColor: 'divider'
                    }}
                  >
                    <img 
                      src={img.image_url} 
                      alt="–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ" 
                      style={{ 
                        width: '100%', 
                        height: '100%', 
                        objectFit: 'cover' 
                      }} 
                    />
                    <IconButton 
                      size="small" 
                      sx={{ 
                        position: 'absolute', 
                        top: 4, 
                        right: 4,
                        bgcolor: 'rgba(0, 0, 0, 0.5)',
                        color: 'white',
                        width: 20,
                        height: 20,
                        '&:hover': {
                          bgcolor: 'rgba(0, 0, 0, 0.7)',
                        }
                      }}
                      onClick={() => removeImage(img.id)}
                    >
                      <DeleteIcon fontSize="small" sx={{ fontSize: 14 }} />
                    </IconButton>
                  </Box>
                ))}
              </Box>
            )}
          </Box>
          
          <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>
            <Button 
              variant="contained" 
              color="primary"
              startIcon={<ReplyIcon />}
              onClick={handleReply}
              disabled={(!replyContent.trim() && images.length === 0) || isSubmitting}
            >
              {isSubmitting ? '–û—Ç–ø—Ä–∞–≤–∫–∞...' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç'}
            </Button>
          </Box>
        </Paper>
      ) : topic.isClosed ? (
        <Paper 
          elevation={0} 
          sx={{ 
            p: 3, 
            borderRadius: 3, 
            border: '1px solid', 
            borderColor: 'divider',
            bgcolor: 'action.hover',
            textAlign: 'center'
          }}
        >
          <Typography variant="h6" sx={{ color: 'text.secondary', fontWeight: 500 }}>
            –≠—Ç–∞ —Ç–µ–º–∞ –∑–∞–∫—Ä—ã—Ç–∞ –¥–ª—è –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
          </Typography>
        </Paper>
      ) : (
        <Paper 
          elevation={0} 
          sx={{ 
            p: 3, 
            borderRadius: 3, 
            border: '1px solid', 
            borderColor: 'divider',
            bgcolor: 'action.hover',
            textAlign: 'center'
          }}
        >
          <Typography variant="h6" sx={{ color: 'text.secondary', fontWeight: 500, mb: 2 }}>
            –î–ª—è –æ—Ç–≤–µ—Ç–∞ –≤ —Ç–µ–º—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è
          </Typography>
          <Button 
            variant="contained" 
            color="primary"
            onClick={() => navigate('/login')}
          >
            –í–æ–π—Ç–∏
          </Button>
        </Paper>
      )}

      {/* –ö–Ω–æ–ø–∫–∞ "–¶–∏—Ç–∏—Ä–æ–≤–∞—Ç—å" –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ */}
      <Menu
        anchorEl={selectionAnchorEl}
        open={Boolean(selectionAnchorEl)}
        onClose={() => {
          if (selectionAnchorEl instanceof HTMLElement && document.body.contains(selectionAnchorEl)) {
            document.body.removeChild(selectionAnchorEl);
          }
          setSelectionAnchorEl(null);
          setSelectedText(null);
        }}
        className="selection-quote-button"
        anchorOrigin={{
          vertical: 'top',
          horizontal: 'center',
        }}
        transformOrigin={{
          vertical: 'bottom',
          horizontal: 'center',
        }}
        PaperProps={{
          elevation: 3,
          sx: {
            borderRadius: 2,
            minWidth: 'auto'
          }
        }}
      >
        <MenuItem onClick={handleQuoteSelectedText} sx={{ py: 0.5, px: 1 }}>
          <ListItemIcon sx={{ minWidth: 30 }}>
            <FormatQuoteIcon fontSize="small" />
          </ListItemIcon>
          <ListItemText 
            primary="–¶–∏—Ç–∏—Ä–æ–≤–∞—Ç—å" 
            primaryTypographyProps={{ variant: 'body2', fontWeight: 500 }}
          />
        </MenuItem>
      </Menu>

      {/* –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π */}
      <Menu
        anchorEl={anchorEl}
        id="post-menu"
        open={open}
        onClose={handleMenuClose}
        onClick={handleMenuClose}
        PaperProps={{
          elevation: 0,
          sx: {
            overflow: 'visible',
            filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.15))',
            mt: 1.5,
            borderRadius: 2,
            minWidth: 180,
            '& .MuiMenuItem-root': {
              px: 2,
              py: 1,
            },
          },
        }}
        transformOrigin={{ horizontal: 'right', vertical: 'top' }}
        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}
      >
        <MenuItem onClick={() => currentPostId && handleQuote(currentPostId)}>
          <ListItemIcon>
            <FormatQuoteIcon fontSize="small" />
          </ListItemIcon>
          <ListItemText>–¶–∏—Ç–∏—Ä–æ–≤–∞—Ç—å</ListItemText>
        </MenuItem>
        
        {/* –ü—É–Ω–∫—Ç—ã –º–µ–Ω—é –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ */}
        {userStore.isAdmin && (
          <MenuItem>
            <ListItemIcon>
              <FlagIcon fontSize="small" />
            </ListItemIcon>
            <ListItemText>–ü–æ–º–µ—Ç–∏—Ç—å –∫–∞–∫ –Ω–∞—Ä—É—à–µ–Ω–∏–µ</ListItemText>
          </MenuItem>
        )}
        
        {/* –ü—É–Ω–∫—Ç—ã –º–µ–Ω—é –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è (–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä) */}
        {userStore.isAdmin && currentPostId === posts[0]?.id && (
          <MenuItem>
            <ListItemIcon>
              <LockIcon fontSize="small" />
            </ListItemIcon>
            <ListItemText>
              {topic.isClosed ? '–û—Ç–∫—Ä—ã—Ç—å —Ç–µ–º—É' : '–ó–∞–∫—Ä—ã—Ç—å —Ç–µ–º—É'}
            </ListItemText>
          </MenuItem>
        )}
        
        {userStore.isAdmin && currentPostId === posts[0]?.id && (
          <MenuItem>
            <ListItemIcon>
              <PushPinIcon fontSize="small" />
            </ListItemIcon>
            <ListItemText>
              {topic.isPinned ? '–û—Ç–∫—Ä–µ–ø–∏—Ç—å —Ç–µ–º—É' : '–ó–∞–∫—Ä–µ–ø–∏—Ç—å —Ç–µ–º—É'}
            </ListItemText>
          </MenuItem>
        )}
        
        {userStore.isAdmin && (
          <MenuItem>
            <ListItemIcon>
              <DeleteIcon fontSize="small" color="error" />
            </ListItemIcon>
            <ListItemText sx={{ color: 'error.main' }}>
              {currentPostId === posts[0]?.id ? '–£–¥–∞–ª–∏—Ç—å —Ç–µ–º—É' : '–£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ'}
            </ListItemText>
          </MenuItem>
        )}
      </Menu>
    </Container>
  );
};

export default TopicDetail; 